[package]
    name = "rustream"
    version = "0.1.0"
    edition = "2021"
    description = "Minimal Streaming App with Rust"
    license-file = "LICENSE"
    repository = "https://github.com/CodeClimberNT/rustream"
    readme = "README.md"

[lints.rust]
    unsafe_code = "forbid"

[dependencies]
    # UI, (wgpu use gfx to create a HAL: https://github.com/gfx-rs/gfx#hardware-abstraction-layer)
    egui = { version = "0.31.0", features = [
        # "bytemuck",
        # Enable to debug if the app freezes
        # "deadlock_detection",
        "default_fonts",
        # "serde",
    ], default-features = false }
    eframe = { version = "0.31.0", features = [
        # "__screenshot",
        # "serde",
        "wgpu",
        "x11",
        "glow",
    ], default-features = false }

    # Screen Capture and Image Processing
    scrap = "0.5.0"
    image = { version = "0.25.5", features = [
        "serde",
    ], default-features = false }
    # ffmpeg-next = { version = "7.1.0" }

    # File System Utilities
    dirs = { version = "6.0.0", default-features = false }

    # Utilities
    log = { version = "0.4.26", default-features = false }
    env_logger = { version = "0.11.6", default-features = false }

    thiserror = { version = "2.0.11", default-features = false }

    rfd = { version = "0.15.1", features = [
        "xdg-portal",
        "tokio",
    ], default-features = false }

    serde = { version = "1.0.218", features = [
        "derive",
    ], default-features = false }
    serde_json = { version = "1.0.139", features = [
        "std",
    ], default-features = false }

    display-info = { git = "https://github.com/DanieleBrCoding/display-info" }

    # Validation
    regex = "1.5"

    # Asynchronous Multi-threading
    tokio = { version = "1.42.0", features = ["full"] }

[target.'cfg(target_os = "linux")'.dependencies]
    async-lock = { version = "3.4.0", features = [
        "std",
    ], default-features = false }
    zbus = { version = "5.5.0", default-features = false, features = ["tokio"] }


[profile.dev]
    opt-level = 1
    # Enable a large amount of optimization in the dev profile for dependencies.
    [profile.dev.package."*"]
        opt-level = 3

[profile.release]
    # Enable more optimization in the release profile at the cost of compile time.
    # Compile the entire crate as one unit.
    # Slows compile times, marginal improvements.
    codegen-units = 1
    # Do a second optimization pass over the entire program, including dependencies.
    # Slows compile times, marginal improvements.
    lto = "thin"
