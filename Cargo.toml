[package]
name = "rustream"
version = "0.1.0"
edition = "2021"
description = "Cross-Platform Streaming Application capable of Hosting, Watching and Saving the Screen(s) in Rust!"
license = "GPL-2.0"
repository = "https://github.com/CodeClimberNT/rustream"

[lints.rust]
unsafe_code = "forbid"

[dependencies]
# GUI Framework
eframe = { version = "0.29.1", features = [
    "glow",
], default-features = false, optional = true }
egui = { version = "0.29.1", optional = true }

# Screen Capture
scrap = "0.5.0"

# Networking
tokio = { version = "1.28.2", features = ["full"] }
tokio-stream = "0.1.11"
serde = { version = "1.0.215", features = ["derive"] }
serde_json = "1.0"

# Hotkeys and Input
winit = "0.30.5"

# Annotations
# Use a drawing crate compatible with egui
egui_extras = { version = "0.29.1", optional = true }
image = { version = "0.25.5", features = ["png", "jpeg"] }

# Recording
# ffmpeg-next = { version = "7.1.0", features = ["static"] }
ffmpeg-next = "7.1.0"

# Logging
log = "0.4.22"
env_logger = "0.11.5"

# Multithreading and Concurrency
crossbeam = "0.8.2"

# [optional] Add platform-specific dependencies if needed

# For global hotkeys
inputbot = "0.6.0"
bytemuck = "1.19.0"
futures = "0.3.31"

[features]
default = ["gui"]
gui = ["eframe", "egui", "egui_extras"]

[profile.release]
opt-level = 3
lto = true

[profile.dev]
opt-level = 2


[build-dependencies]
# ffmpeg-sys-next = "7.1.0"
# ffmpeg-sys-next = { version = "7.1.0", features = ["build", "static"] }
