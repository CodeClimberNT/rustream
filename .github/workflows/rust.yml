name: Rust CI

on:
  push:
    branches: ["CI"]
  pull_request:
    branches: ["CI"]

env:
  CARGO_TERM_COLOR: always

jobs:
  check:
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            artifact_name: ${{ github.event.repository.name }}
            asset_name: ${{ github.event.repository.name }}-linux-amd64
          - os: windows-latest
            artifact_name: ${{ github.event.repository.name }}.exe
            asset_name: ${{ github.event.repository.name }}-windows-amd64.exe
          - os: macos-latest
            artifact_name: ${{ github.event.repository.name }}
            asset_name: ${{ github.event.repository.name }}-macos-amd64
    
    runs-on: ${{ matrix.os }}
    
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
      
      # - name: Cache Cargo registry
      #   uses: actions/cache@v4
      #   with:
      #     path: ~/.cargo/registry
      #     key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
          
      # - name: Cache Cargo index
      #   uses: actions/cache@v4
      #   with:
      #     path: ~/.cargo/git
      #     key: ${{ runner.os }}-cargo-index-${{ hashFiles('**/Cargo.lock') }}
          
      # - name: Cache Cargo target directory
      #   uses: actions/cache@v4
      #   with:
      #     path: target
      #     key: ${{ runner.os }}-cargo-target-${{ hashFiles('**/Cargo.lock') }}

      # - name: Cache Rust toolchain
      #   uses: actions/cache@v4
      #   with:
      #     path: |
      #       ~/.rustup
      #       ~/.cargo/bin/
      #       ~/.cargo/env
      #     key: ${{ runner.os }}-rust-toolchain-${{ hashFiles('rust-toolchain.toml', 'rust-toolchain') }}-v1
      #     restore-keys: |
      #       ${{ runner.os }}-rust-toolchain-
  
      - name: Install Rust toolchain
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: stable
          
      - name: Build release
        run: >-
          cargo build --release
        # run: cargo check --verbose
  # build:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v4
      
  #     - name: Cache Cargo registry
  #       uses: actions/cache@v4
  #       with:
  #         path: ~/.cargo/registry
  #         key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
          
  #     - name: Cache Cargo index
  #       uses: actions/cache@v4
  #       with:
  #         path: ~/.cargo/git
  #         key: ${{ runner.os }}-cargo-index-${{ hashFiles('**/Cargo.lock') }}
          
  #     - name: Cache Cargo target directory
  #       uses: actions/cache@v4
  #       with:
  #         path: target
  #         key: ${{ runner.os }}-cargo-target-${{ hashFiles('**/Cargo.lock') }}

  #     - name: Build
  #       run: cargo build --verbose

  # test:
  #   needs: build
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v4
  #     - name: Run tests
  #       run: cargo test --verbose
